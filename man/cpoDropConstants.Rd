% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CPO_dropConstants.R
\name{cpoDropConstants}
\alias{cpoDropConstants}
\title{Drop constant or near-constant Features.}
\usage{
cpoDropConstants(rel.tol = 1e-08, abs.tol = 1e-08, ignore.na = FALSE,
  id = NULL, export = "export.default", affect.type = NULL,
  affect.index = integer(0), affect.names = character(0),
  affect.pattern = NULL, affect.invert = FALSE,
  affect.pattern.ignore.case = FALSE, affect.pattern.perl = FALSE,
  affect.pattern.fixed = FALSE)
}
\arguments{
\item{rel.tol}{[\code{numeric(1)}]\cr
Relative tolerance within which to consider a feature constant.
Set to \code{Inf} to disregard relative tolerance.
Default is \code{1e-8}.}

\item{abs.tol}{[\code{numeric(1)}]\cr
Absolute tolerance within which to consider a feature constant.
Set to \code{Inf} to disregard absolute tolerance.
Default is \code{1e-8}.}

\item{ignore.na}{[\code{logical(1)}]\cr
Whether to ignore \code{NA} and \code{NaN} values. If this is
\code{TRUE}, values that are \code{NA} or \code{NaN} will not
be counted as different from any other value. If this is
\code{FALSE}, columns with \code{NA} or \code{NaN} in them will
only count as constant if they are entirely made up of \code{NA},
or entirely made up of \code{NaN}.
Default is \code{FALSE}.}

\item{id}{[\code{character(1)}]\cr
id to use as prefix for the CPO's hyperparameters. this
must be used to avoid name clashes when composing two
CPOs of the same type, or with learners or other CPOS
with hyperparameters with clashing names.}

\item{export}{[\code{character}]\cr
Either a character vector indicating the parameters to
export as hyperparameters, or one of the special values
\dQuote{export.all} (export all parameters),
\dQuote{export.default} (export all parameters that are exported by default),
\dQuote{export.set} (export all parameters that were set during construction),
\dQuote{export.default.set} (export the intersection of the \dQuote{default} and \dQuote{set} parameters),
\dQuote{export.unset} (export all parameters that were \emph{not} set during construction) or
\dQuote{export.default.unset} (export the intersection of the \dQuote{default} and \dQuote{unset} parameters).
Default is \dQuote{export.default}.}

\item{affect.type}{[\code{character} | \code{NULL}]\cr
Type of columns to affect. A subset of \dQuote{numeric}, \dQuote{factor}, \dQuote{ordered}, \dQuote{other}, or \code{NULL}
to not match by column type. Default is \code{NULL}.}

\item{affect.index}{[\code{numeric}]\cr
Indices of feature columns to affect. The order of indices given is respected. Default is \code{integer(0)}.}

\item{affect.names}{[\code{character}]\cr
Feature names of feature columns to affect. The order of names given is respected. Default is \code{character(0)}.}

\item{affect.pattern}{[\code{character(1)} | \code{NULL}]\cr
\code{\link[base]{grep}} pattern to match feature names by. Default is \code{NULL} (no pattern matching)}

\item{affect.invert}{[\code{logical(1)}]\cr
Whether to affect all features \emph{not} matched by other \code{affect.*} parameters.}

\item{affect.pattern.ignore.case}{[\code{logical(1)}]\cr
Ignore case when matching features with \code{affect.pattern}; see \code{\link[base]{grep}}. Default is \code{FALSE}.}

\item{affect.pattern.perl}{[\code{logical(1)}]\cr
Use Perl-style regular expressions for \code{affect.pattern}; see \code{\link[base]{grep}}. Default is \code{FALSE}.}

\item{affect.pattern.fixed}{[\code{logical(1)}]\cr
Use fixed matching instead of regular expressions for \code{affect.pattern}; see \code{\link[base]{grep}}. Default is \code{FALSE}.}
}
\description{
Drop all columns that are either constant, or close to constant for numerics,
and columns that have only one value for factors or ordered columns.

This function creates a CPO object, which can be applied to
\code{\link{Task}}s, \code{data.frame}s, \code{link{Learner}}s
and other CPO objects using the \code{\link{\%>>\%}} operator.

The parameters of this object can be changed after creation
using the function \code{\link{setHyperPars}}. The other
hyper-parameter manipulating functins, \code{\link{getHyperPars}}
and \code{\link{getParamSet}} similarly work as one expects.

If the \dQuote{id} parameter is given, the hyperparameters
will have this id as aprefix; this will, however, not change
the parameters of the creator function.

CPO constructor functions are called with optional values of parameters, and additional \dQuote{special} optional values.
  The special optional values are the \code{id} parameter, and the \code{affect.*} parameters. The \code{affect.*} parameters
  enable the user to control which subset of a given dataset is affected. If no \code{affect.*} parameters are given, all
  data features are affected by default.
}
\section{General CPO Info}{
NA
}

\seealso{
Other CPO: \code{\link{CPOImputer}}, \code{\link{\%>>\%}},
  \code{\link{applyCPO}}, \code{\link{attachCPO}},
  \code{\link{cpoApplyFun}}, \code{\link{cpoAsNumeric}},
  \code{\link{cpoCase}}, \code{\link{cpoCollapseFact}},
  \code{\link{cpoDummyEncode}},
  \code{\link{cpoFilterFeatures}},
  \code{\link{cpoFixFactors}},
  \code{\link{cpoImpactEncodeClassif}},
  \code{\link{cpoImpactEncodeRegr}},
  \code{\link{cpoImpute}},
  \code{\link{cpoMissingIndicators}},
  \code{\link{cpoModelMatrix}}, \code{\link{cpoMultiplex}},
  \code{\link{cpoPca}}, \code{\link{cpoProbEncode}},
  \code{\link{cpoQuantileBinNumerics}},
  \code{\link{cpoScaleMaxAbs}},
  \code{\link{cpoScaleRange}}, \code{\link{cpoScale}},
  \code{\link{cpoSelect}}, \code{\link{cpoSpatialSign}},
  \code{\link{cpoWrap}}, \code{\link{getCPOAffect}},
  \code{\link{getCPOId}}, \code{\link{getCPOName}},
  \code{\link{getRetrafoState}}, \code{\link{inverter<-}},
  \code{\link{inverter}}, \code{\link{makeCPOExtended}},
  \code{\link{makeCPO}},
  \code{\link{makeRetrafoFromState}},
  \code{\link{pipeCPO}}, \code{\link{retrafo<-}},
  \code{\link{retrafo}}, \code{\link{setCPOId}}
}
