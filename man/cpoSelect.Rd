% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CPO_concrete.R
\name{cpoSelect}
\alias{cpoSelect}
\title{Drop All Columns Except Certain Selected Ones from Data}
\usage{
cpoSelect(type = character(0), index = integer(0), names = character(0),
  pattern = NULL, pattern.ignore.case = FALSE, pattern.perl = FALSE,
  pattern.fixed = FALSE, invert = FALSE, id = NULL, affect.type = NULL,
  affect.index = integer(0), affect.names = character(0),
  affect.pattern = NULL, affect.invert = FALSE,
  affect.pattern.ignore.case = FALSE, affect.pattern.perl = FALSE,
  affect.pattern.fixed = FALSE)
}
\arguments{
\item{type}{[\code{character}]\cr
One or more out of \dQuote{numeric}, \dQuote{ordered}, \dQuote{factor}, \dQuote{other}.
The type of columns to keep. Default is \code{character(0)}.}

\item{index}{[\code{integer}]\cr
Indices of columns to keep. Note that the index counts columns without the target column(s).
This and the next parameter make it possible to re-order columns. While all columns which match either
\dQuote{type}, \dQuote{pattern} or \dQuote{index} remain in the resulting data, the ones
selected by \dQuote{index} are put at the front in the order specified.
Default is \code{integer(0)}.}

\item{names}{[\code{character}]\cr
Names of columns to keep. Matching columns will be kept in order of their names occurring, but after
the columns indicated in \dQuote{index}.}

\item{pattern}{[\code{character(1)}]\cr
A pattern to match against the column names. Same as in \code{\link{grep}}.
Default is \code{NULL} for no matching.}

\item{pattern.ignore.case}{[\code{logical(1)}]\cr
Influences behaviour of \dQuote{pattern}: Whether to perform case insensitive matching. Same as in \code{\link{grep}}.
Default is \code{FALSE}.}

\item{pattern.perl}{[\code{logical(1)}]\cr
Influences behaviour of \dQuote{pattern}: Should Perl-compatible regexps be used? Same as in \code{\link{grep}}.
Default is \code{FALSE}.}

\item{pattern.fixed}{[\code{logical(1)}]\cr
Influences behaviour of \dQuote{pattern}: Whether to use match \code{pattern} as as is. Same as in \code{\link{grep}}.
Default is \code{FALSE}.}

\item{invert}{[\code{logical(1)}]\cr
Invert column selection: Drop the named columns and return the rest, instead of keeping the selected
columns only. Default is \code{FALSE}.}

\item{id}{[\code{character(1)}]\cr
id to use as prefix for the CPO's hyperparameters. this
must be used to avoid name clashes when composing two
CPOs of the same type, or with learners or other CPOS
with hyperparameters with clashing names.}
}
\description{
Select columns by type or name. The parameters \dQuote{type} and
\dQuote{pattern} are additive; if both are given, all column that match
either will be returned.

This function creates a CPO object, which can be applied to
\code{\link{Task}}s, \code{data.frame}s, \code{link{Learner}}s
and other CPO objects using the \code{\link{\%>>\%}} operator.

The parameters of this object can be changed after creation
using the function \code{\link{setHyperPars}}. The other
hyper-parameter manipulating functins, \code{\link{getHyperPars}}
and \code{\link{getParamSet}} similarly work as one expects.

If the \dQuote{id} parameter is given, the hyperparameters
will have this id as aprefix; this will, however, not change
the parameters of the creator function.
}
\seealso{
Other CPO: \code{\link{CPOImputer}}, \code{\link{CPO}},
  \code{\link{NULLCPO}}, \code{\link{\%>>\%}},
  \code{\link{applyCPO}}, \code{\link{attachCPO}},
  \code{\link{chainCPO}}, \code{\link{cpoApply}},
  \code{\link{cpoDummyEncode}},
  \code{\link{cpoFilterFeatures}}, \code{\link{cpoImpute}},
  \code{\link{cpoMultiplex}}, \code{\link{cpoPca}},
  \code{\link{cpoScale}}, \code{\link{getCPOAffect}},
  \code{\link{getCPOId}}, \code{\link{getCPOName}},
  \code{\link{getHyperPars}},
  \code{\link{getRetrafoState}},
  \code{\link{hasTagInvert}}, \code{\link{inverter<-}},
  \code{\link{inverter}}, \code{\link{makeCPOTargetOp}},
  \code{\link{makeCPO}},
  \code{\link{makeRetrafoFromState}},
  \code{\link{retrafo<-}}, \code{\link{retrafo}},
  \code{\link{setHyperPars}}, \code{\link{tagInvert}}
}
